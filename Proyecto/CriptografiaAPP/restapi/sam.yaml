AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Serverless CV API
Resources:
  JerseySampleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: co.cyte.web.cvapi.handler.StreamLambdaHandler::handleRequest
      Runtime: java8
      CodeUri: build/libs/restapi-1.0.jar
      MemorySize: 512
      Policies: 
        - AWSLambdaBasicExecutionRole
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - AmazonS3FullAccess
        - SecretsManagerReadWrite
      Timeout: 120
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
            
  CvRDSSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: CvRDSSecret
      Description: "This is a Secrets Manager secret for an RDS DB instance"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "superuser2"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
  # This is an RDS instance resource. The master username and password use dynamic references
  # to resolve values from Secrets Manager. The dynamic reference guarantees that CloudFormation
  # will not log or persist the resolved value. We use a Ref to the secret resource's logical id
  # to construct the dynamic reference, since the secret name is generated by CloudFormation.
  CvRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      Engine: mysql
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref CvRDSSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref CvRDSSecret, ':SecretString:password}}' ]]
      BackupRetentionPeriod: 0
      # DBInstanceIdentifier: 'rotation-instance'
      DBName: CV
      # remove this in production environments
      PubliclyAccessible: true

  #This is a SecretTargetAttachment resource which updates the referenced Secret resource with properties about
  #the referenced RDS instance
  SecretRDSInstanceAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref CvRDSSecret
      TargetId: !Ref CvRDSInstance
      TargetType: AWS::RDS::DBInstance
  # This is another secret that has its password hardcoded into the template (NOT RECOMMENDED)
  ConfigSecrets:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: ConfigSecrets
      Description: "The install pass and access token."
      GenerateSecretString:
        SecretStringTemplate: '{"installPassword": "changeit"}'
        GenerateStringKey: "accessToken"
        PasswordLength: 30
        ExcludePunctuation: True
  # The AWS lambda function with CV
  # function:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Handler: my.service.PingResource
  #     Runtime: java8
  #     Description: Java function
  #     MemorySize: 512
  #     Timeout: 300
  #     # Function's execution role
  #     Policies:
  #       - AWSLambdaBasicExecutionRole
  #       - AWSLambda_ReadOnlyAccess
  #       - AWSXrayWriteOnlyAccess
  #       - AWSLambdaVPCAccessExecutionRole
  #       - AmazonS3FullAccess
  #       - SecretsManagerReadWrite
  #     Tracing: Active
  #     Layers:
  #       - !Ref libs

Outputs:
  CVApi:
    Description: URL for application
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/cvapi'
    Export:
      Name: CVApi